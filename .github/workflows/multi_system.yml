
name: main

on: push

jobs:
  windows-cygwin:
      runs-on: windows-latest
      defaults:
        run:
          shell: C:\cygwin\bin\bash.exe --login -o igncr {0}
      steps:
        - uses: seanmiddleditch/gha-setup-ninja@master
        - uses: actions/checkout@v4
  
        - name: "Setup Cygwin"
          uses: cygwin/cygwin-install-action@v2
          with:
            platform: x86_64
            packages: automake make cmake gcc-g++ doxygen graphviz libssl-devel libuuid-devel
        
        - name: Checkout Repository
          uses: actions/checkout@v3
          with:
            submodules: recursive
            
        - name: "Setup cmake"
          run: |
            cmake -B build -DCMAKE_BUILD_TYPE=Debug
            cmake --build build
          
  windows-msys2:
      runs-on: windows-latest
      defaults:
        run:
          shell: msys2 {0}
      steps:
        - uses: seanmiddleditch/gha-setup-ninja@master
        - uses: actions/checkout@v4
    
        - name: "Setup MSYS2"
          uses: msys2/setup-msys2@v2
          with:
            release: false
            install: >-
              git
              make
              python3-pip
              mingw-w64-x86_64-cmake
              mingw-w64-x86_64-gcc
              mingw-w64-x86_64-doxygen
              mingw-w64-x86_64-graphviz
              msys2-w32api-runtime

        - name: Checkout Repository
          uses: actions/checkout@v3
          with:
            submodules: recursive
    
        - name: "Setup cmake"
          run: |
            cmake -B build -DCMAKE_BUILD_TYPE=Debug
            cmake --build build

  windows-visual-studio:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: "Setup Visual Studio"
        uses: egor-tensin/vs-shell@v2

      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: "Setup cmake"
        run: |
          cmake -B build -DCMAKE_BUILD_TYPE=Debug
          cmake --build build
        
  windows-mingw:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: seanmiddleditch/gha-setup-ninja@master

      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
    
      - name: "Build"
        run: |
          cmake -B build -DCMAKE_BUILD_TYPE=Debug -G "MinGW Makefiles"
          # cmake -B build -G "Ninja" -DCMAKE_BUILD_TYPE=Debug
          cmake --build build
  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: "Setup required packages"
        run: brew install cmake ninja mesa-glu mesa xorg-server

      
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
        
      - name: Building Project
        run: |
          cmake -B build -G "Ninja" -DCMAKE_BUILD_TYPE=Debug
          cmake --build build

  linux-clang:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: "Setup required packages"
        run: sudo apt-get -y install clang cmake ninja-build libglu1-mesa-dev mesa-common-dev xorg-dev

      - name: "Setup clang"
        uses: egor-tensin/setup-clang@v1

      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
        
      - name: Building Project
        env:
          CC: clang
          CXX: clang++
        run: |
          cmake -B build -G "Ninja" -DCMAKE_BUILD_TYPE=Debug
          cmake --build build
          
  linux-gcc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Installing Dependencies
        run: |
          sudo apt-get update
          sudo apt-get -y install gcc cmake ninja-build libglu1-mesa-dev mesa-common-dev xorg-dev

      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Building Project
        env:
          CC: gcc
          CXX: g++
        run: |
          cmake -B build -G "Ninja" -DCMAKE_BUILD_TYPE=Debug
          cmake --build build

  #         CXX: g++
  #       run: |
  #         cmake -B build -G "Ninja" -DCMAKE_BUILD_TYPE=Debug
  #         cmake --build build
